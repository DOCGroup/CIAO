name: linux

on:
  push:
  pull_request:
  schedule:
    - cron: '0 7 * * SUN'

jobs:
  build:
    strategy:
      matrix:
        include:
          - CC: gcc-4.8
            CXX: g++-4.8
            PackageDeps: g++-4.8
            platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux.GNU
            os: ubuntu-16.04
          - CC: gcc-6
            CXX: g++-6
            PackageDeps: g++-6
            platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux.GNU
            os: ubuntu-18.04
          - CC: gcc-7
            CXX: g++-7
            PackageDeps: g++-7
            platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux.GNU
            os: ubuntu-18.04
          - CC: gcc-8
            CXX: g++-8
            PackageDeps: g++-8
            platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux.GNU
            os: ubuntu-18.04
          - CC: gcc-9
            CXX: g++-9
            PackageDeps: g++-9
            platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux.GNU
            os: ubuntu-18.04
          - CC: gcc-10
            CXX: g++-10
            PackageDeps: g++-10
            platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux.GNU
            os: ubuntu-20.04
          - CC: clang-5.0
            CXX: clang++-5.0
            PackageDeps: clang-5.0
            platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux_clang.GNU
            os: ubuntu-16.04
          - CC: clang-6.0
            CXX: clang++-6.0
            PackageDeps: clang-6.0
            platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux_clang.GNU
            os: ubuntu-18.04
          - CC: clang-7
            CXX: clang++-7
            PackageDeps: clang-7
            platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux_clang.GNU
            os: ubuntu-18.04
          - CC: clang-8
            CXX: clang++-8
            PackageDeps: clang-8
            platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux_clang.GNU
            os: ubuntu-18.04
          - CC: clang-9
            CXX: clang++-9
            PackageDeps: clang-9
            Repo: llvm-toolchain-$(lsb_release -cs)-9
            platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux_clang.GNU
            os: ubuntu-18.04
          - CC: clang-10
            CXX: clang++-10
            PackageDeps: clang-10
            Repo: llvm-toolchain-$(lsb_release -cs)-10
            platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux_clang.GNU
            os: ubuntu-20.04
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} ${{ matrix.CXX }}
    env:
      DOC_ROOT: ${{ github.workspace }}/ACE_TAO
      ACE_ROOT: ${{ github.workspace }}/ACE_TAO/ACE
      TAO_ROOT: ${{ github.workspace }}/ACE_TAO/TAO
      MPC_ROOT: ${{ github.workspace }}/ACE_TAO/MPC
      CIAO_ROOT: ${{ github.workspace }}
      DANCE_ROOT: ${{ github.workspace }}/DAnCE
      DDS_ROOT: ${{ github.workspace }}/OpenDDS
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
    steps:
    - name: checkout CIAO
      uses: actions/checkout@v2
    - name: checkout ACE_TAO
      uses: actions/checkout@v2
      with:
        repository: DOCGroup/ACE_TAO
        path: ACE_TAO
    - name: checkout MPC
      uses: actions/checkout@v2
      with:
        repository: DOCGroup/MPC
        path: ACE_TAO/MPC
    - name: checkout DAnCE
      uses: actions/checkout@v2
      with:
        repository: DOCGroup/DAnCE
        path: DAnCE
    - name: checkout OpenDDS
      uses: actions/checkout@v2
      with:
        repository: objectcomputing/OpenDDS
        path: OpenDDS
    - name: Add Repo
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
        sudo apt-add-repository "deb http://apt.llvm.org/$(lsb_release -cs)/ ${{ matrix.Repo }} main"
      if: matrix.Repo != ''
    - name: Add packages
      run: |
        sudo apt-get --yes update
        sudo apt-get --yes install libxerces-c-dev libssl-dev ${{ matrix.PackageDeps }}
    - name: create $ACE_ROOT/ace/config.h
      run: |
        '#include "ace/config-linux.h"' > ${env:ACE_ROOT}/ace/config.h
      shell: pwsh
    - name: create $ACE_ROOT/include/makeinclude/platform_macros.GNU
      run: |
        'ipv6=1' > ${env:ACE_ROOT}/include/makeinclude/platform_macros.GNU
        'xerces3=1' >> ${env:ACE_ROOT}/include/makeinclude/platform_macros.GNU
        'ssl=1' >> ${env:ACE_ROOT}/include/makeinclude/platform_macros.GNU
        'dds4ccm_opendds=1' >> ${env:ACE_ROOT}/include/makeinclude/platform_macros.GNU
        '${{ matrix.platform_file }}' >>  ${env:ACE_ROOT}/include/makeinclude/platform_macros.GNU
      shell: pwsh
    - name: create $ACE_ROOT/bin/MakeProjectCreator/config/default.features
      run: |
        'ipv6=1' > ${env:ACE_ROOT}/bin/MakeProjectCreator/config/default.features
        'dds4ccm_opendds=1' >> ${env:ACE_ROOT}/bin/MakeProjectCreator/config/default.features
        'dds_suppress_anys=0' >> ${env:ACE_ROOT}/bin/MakeProjectCreator/config/default.features
        'xerces3=1' >> ${env:ACE_ROOT}/bin/MakeProjectCreator/config/default.features
        'ssl=1' >> ${env:ACE_ROOT}/bin/MakeProjectCreator/config/default.features
        'versioned_namespace=1' >> ${env:ACE_ROOT}/bin/MakeProjectCreator/config/default.features
      shell: pwsh
    - name: Run mwc.pl on $(CIAO_ROOT)/CIAO_TAO_DAnCE_OpenDDS.mwc
      run: |
        perl ${env:ACE_ROOT}/bin/mwc.pl -type gnuace ${env:CIAO_ROOT}/CIAO_TAO_DAnCE_OpenDDS.mwc -workers 4
      shell: pwsh
    - name: Build CIAO_TAO_DAnCE_OpenDDS project
      run: |
        make -j 6 -C ${env:CIAO_ROOT}
      shell: pwsh
