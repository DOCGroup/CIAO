variables:
   DOC_ROOT: $(Build.SourcesDirectory)/ACE_TAO
   ACE_ROOT: $(DOC_ROOT)/ACE
   MPC_ROOT: $(ACE_ROOT)/MPC
   TAO_ROOT: $(DOC_ROOT)/TAO
   CIAO_ROOT: $(Build.SourcesDirectory)
   DAnCE_ROOT: $(Build.SourcesDirectory)/DAnCE
   DDS_ROOT: $(Build.SourcesDirectory)/DDS
   system.prefergit: true

resources:
- repo: self
  fetchDepth: 1

jobs:
- job: VisualStudio2019
  timeoutInMinutes: 90
  pool:
    vmImage: windows-2019
  strategy:
    matrix:
      Debug64:
        BuildPlatform: x64
        BuildConfiguration: Debug
        vcpkgarch: x64-windows
        vcpkglibdir: debug\lib
        vcpkgpackages: openssl xerces-c
      Release64:
        BuildPlatform: x64
        BuildConfiguration: Release
        vcpkgarch: x64-windows
        vcpkglibdir: lib
        vcpkgpackages: openssl xerces-c
      Debug32:
        BuildPlatform: Win32
        BuildConfiguration: Debug
        vcpkgarch: x86-windows
        vcpkglibdir: debug\lib
        vcpkgpackages: openssl xerces-c
      Release32:
        BuildPlatform: Win32
        BuildConfiguration: Release
        vcpkgarch: x86-windows
        vcpkglibdir: lib
        vcpkgpackages: openssl xerces-c
  variables:
    VCPKG_ROOT: C:\vcpkg
    XERCESC_INCDIR: $(VCPKG_ROOT)\installed\$(vcpkgarch)\include
    XERCESC_LIBDIR: $(VCPKG_ROOT)\installed\$(vcpkgarch)\$(vcpkglibdir)
    SSL_INCDIR: $(VCPKG_ROOT)\installed\$(vcpkgarch)\include
    SSL_LIBDIR: $(VCPKG_ROOT)\installed\$(vcpkgarch)\$(vcpkglibdir)
  steps:
  - powershell: |
      git clone -q --depth 1 git://github.com/Microsoft/vcpkg.git $(VCPKG_ROOT)
      $(VCPKG_ROOT)\bootstrap-vcpkg.bat
      $(VCPKG_ROOT)\vcpkg install --recurse --triplet $(vcpkgarch) $(vcpkgpackages)
    displayName: Install additional packages using vcpkg
  - powershell: git clone -q --depth 1 git://github.com/DOCGroup/ACE_TAO.git $(Build.SourcesDirectory)\ACE_TAO
    displayName: git clone ACE_TAO
  - powershell: git clone -q --depth 1 git://github.com/DOCGroup/MPC.git $(MPC_ROOT)
    displayName: git clone MPC
  - powershell: git clone -q --depth 1 git://github.com/DOCGroup/DAnCE.git $(DAnCE_ROOT)
    displayName: git clone DAnCE
  - powershell: |
      '#include "ace/config-win32.h"' > $(ACE_ROOT)\ace\config.h
    displayName: Create config.h file
  - powershell: |
      echo "xerces3=1" | out-file -encoding ASCII $(ACE_ROOT)\bin\MakeProjectCreator\config\default.features
      echo "ssl=1" | out-file -append -encoding ASCII $(ACE_ROOT)\bin\MakeProjectCreator\config\default.features
    displayName: Create default.features file
  - powershell: perl $(ACE_ROOT)/bin/mwc.pl -type vs2019 CIAO_TAO_DAnCE.mwc -workers 4
    displayName: Run script mwc.pl on CIAO_TAO_DAnCE.mwc
  - task: VSBuild@1
    displayName: Build solution CIAO_TAO_DAnCE.sln
    inputs:
      solution: CIAO_TAO_DAnCE.sln
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
      maximumCpuCount: true

- job: VisualStudio2017
  timeoutInMinutes: 90
  pool:
    vmImage: vs2017-win2016
  strategy:
    matrix:
      Debug64:
        BuildPlatform: x64
        BuildConfiguration: Debug
        vcpkgarch: x64-windows
        vcpkglibdir: debug\lib
        vcpkgpackages: openssl xerces-c
      Release64:
        BuildPlatform: x64
        BuildConfiguration: Release
        vcpkgarch: x64-windows
        vcpkglibdir: lib
        vcpkgpackages: openssl xerces-c
  variables:
    VCPKG_ROOT: C:\vcpkg
    XERCESC_INCDIR: $(VCPKG_ROOT)\installed\$(vcpkgarch)\include
    XERCESC_LIBDIR: $(VCPKG_ROOT)\installed\$(vcpkgarch)\$(vcpkglibdir)
    SSL_INCDIR: $(VCPKG_ROOT)\installed\$(vcpkgarch)\include
    SSL_LIBDIR: $(VCPKG_ROOT)\installed\$(vcpkgarch)\$(vcpkglibdir)
  steps:
  - powershell: |
      git clone -q --depth 1 git://github.com/Microsoft/vcpkg.git $(VCPKG_ROOT)
      $(VCPKG_ROOT)\bootstrap-vcpkg.bat
      $(VCPKG_ROOT)\vcpkg install --recurse --triplet $(vcpkgarch) $(vcpkgpackages)
    displayName: Install additional packages using vcpkg
  - powershell: git clone --depth 1 git://github.com/DOCGroup/ACE_TAO.git $(Build.SourcesDirectory)\ACE_TAO
    displayName: git clone ACE_TAO
  - powershell: git clone --depth 1 git://github.com/DOCGroup/MPC.git $(MPC_ROOT)
    displayName: git clone MPC
  - powershell: git clone --depth 1 git://github.com/DOCGroup/DAnCE.git $(DAnCE_ROOT)
    displayName: git clone DAnCE
  - powershell: |
      '#include "ace/config-win32.h"' > $(ACE_ROOT)\ace\config.h
    displayName: Create config.h file
  - powershell: |
      echo "xerces3=1" | out-file -encoding ASCII $(ACE_ROOT)\bin\MakeProjectCreator\config\default.features
      echo "ssl=1" | out-file -append -encoding ASCII $(ACE_ROOT)\bin\MakeProjectCreator\config\default.features
    displayName: Create default.features file
  - powershell: perl $(ACE_ROOT)/bin/mwc.pl -type vs2017 CIAO_TAO_DAnCE.mwc -workers 4
    displayName: Run script mwc.pl on CIAO_TAO_DAnCE.mwc
  - task: VSBuild@1
    displayName: Build solution CIAO_TAO_DAnCE.sln
    inputs:
      solution: CIAO_TAO_DAnCE.sln
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
      maximumCpuCount: true

- job: VisualStudio2015
  timeoutInMinutes: 90
  pool:
    vmImage: vs2015-win2012r2
  strategy:
    matrix:
      Debug64:
        BuildPlatform: x64
        BuildConfiguration: Debug
        vcpkgarch: x64-windows
        vcpkglibdir: debug\lib
      Release64:
        BuildPlatform: x64
        BuildConfiguration: Release
        vcpkgarch: x64-windows
        vcpkglibdir: lib
  variables:
    XERCESCROOT: $(Build.SourcesDirectory)\vcpkg\packages\xerces-c_$(vcpkgarch)
    SSL_ROOT: $(Build.SourcesDirectory)\vcpkg\packages\openssl-windows_$(vcpkgarch)
    SSL_LIBDIR: $(SSL_ROOT)\$(vcpkglibdir)
    XERCESC_LIBDIR: $(XERCESCROOT)\$(vcpkglibdir)
  steps:
  - powershell: |
      git clone --depth 1 git://github.com/Microsoft/vcpkg.git $(Build.SourcesDirectory)\vcpkg
      .\vcpkg\bootstrap-vcpkg.bat
      .\vcpkg\vcpkg.exe install --recurse --triplet $(vcpkgarch) openssl xerces-c
    displayName: vcpkg
  - powershell: git clone --depth 1 git://github.com/DOCGroup/ACE_TAO.git $(Build.SourcesDirectory)\ACE_TAO
    displayName: git clone ACE_TAO
  - powershell: git clone --depth 1 git://github.com/DOCGroup/MPC.git $(MPC_ROOT)
    displayName: git clone MPC
  - powershell: git clone --depth 1 git://github.com/DOCGroup/DAnCE.git $(DAnCE_ROOT)
    displayName: git clone DAnCE
  - powershell: |
      '#include "ace/config-win32.h"' > $(ACE_ROOT)\ace\config.h
    displayName: Create config.h file
  - powershell: |
      echo "xerces3=1" | out-file -encoding ASCII $(ACE_ROOT)\bin\MakeProjectCreator\config\default.features
      echo "ssl=1" | out-file -append -encoding ASCII $(ACE_ROOT)\bin\MakeProjectCreator\config\default.features
    displayName: Create default.features file
  - powershell: perl $(ACE_ROOT)/bin/mwc.pl -type vc14 CIAO_TAO_DAnCE.mwc -workers 4
    displayName: Run script mwc.pl on CIAO_TAO_DAnCE.mwc
  - task: VSBuild@1
    displayName: Build solution CIAO_TAO_DAnCE.sln
    inputs:
      solution: CIAO_TAO_DAnCE.sln
      platform: $(BuildPlatform)
      configuration: $(BuildConfiguration)
      maximumCpuCount: true

- job: Linux
  pool:
    vmImage: ubuntu-16.04
  strategy:
    matrix:
      GCC4:
        CC: gcc
        CXX: g++
        platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux.GNU
      GCC6:
        CC: gcc-6
        CXX: g++-6
        PackageDeps: g++-6
        platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux.GNU
      GCC7:
        CC: gcc-7
        CXX: g++-7
        PackageDeps: g++-7
        platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux.GNU
      GCC8:
        CC: gcc-8
        CXX: g++-8
        PackageDeps: g++-8
        platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux.GNU
      CLANG5:
        CC: clang-5.0
        CXX: clang++-5.0
        PackageDeps: clang-5.0
        Repo: llvm-toolchain-$(lsb_release -cs)-5.0
        platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux_clang.GNU
      CLANG6:
        CC: clang-6.0
        CXX: clang++-6.0
        PackageDeps: clang-6.0
        Repo: llvm-toolchain-$(lsb_release -cs)-6.0
        platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux_clang.GNU
      CLANG7:
        CC: clang-7
        CXX: clang++-7
        PackageDeps: clang-7
        Repo: llvm-toolchain-$(lsb_release -cs)-7
        platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux_clang.GNU
      CLANG8:
        CC: clang-8
        CXX: clang++-8
        PackageDeps: clang-8
        Repo: llvm-toolchain-$(lsb_release -cs)-8
        platform_file: include $(ACE_ROOT)/include/makeinclude/platform_linux_clang.GNU
  steps:
  - script: |
      wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
      sudo apt-add-repository "deb http://apt.llvm.org/$(lsb_release -cs)/ $(Repo) main"
    displayName: Add repository ($(Repo))
    condition: and(succeeded(), ne(variables['Repo'], ''))
  - script: |
      sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
      sudo apt-get --yes update
      sudo apt-get --yes install libxerces-c-dev libssl-dev $(PackageDeps)
    displayName: install system package dependencies ($(PackageDeps))
  - powershell: git clone --depth 1 git://github.com/DOCGroup/ACE_TAO.git $(DOC_ROOT)
    displayName: git clone ACE_TAO
  - powershell: git clone --depth 1 git://github.com/DOCGroup/MPC.git $(MPC_ROOT)
    displayName: git clone MPC
  - powershell: git clone --depth 1 git://github.com/DOCGroup/DAnCE.git $(DAnCE_ROOT)
    displayName: git clone DAnCE
  - powershell: git clone --depth 1 git://github.com/objectcomputing/OpenDDS $(DDS_ROOT)
    displayName: git clone OpenDDS
  - powershell: |
      '#include "ace/config-linux.h"' > $(ACE_ROOT)/ace/config.h
    displayName: Create config.h file
  - powershell: |
      'xerces3=1' > $(ACE_ROOT)/bin/MakeProjectCreator/config/default.features
      'dds4ccm_opendds=1' >> $(ACE_ROOT)/bin/MakeProjectCreator/config/default.features
      'dds_suppress_anys=0' >> $(ACE_ROOT)/bin/MakeProjectCreator/config/default.features
      'ssl=1' >> $(ACE_ROOT)/bin/MakeProjectCreator/config/default.features
    displayName: Create default.features file
  - powershell: |
      'xerces3=1' > $(ACE_ROOT)/include/makeinclude/platform_macros.GNU
      'ssl=1' >> $(ACE_ROOT)/include/makeinclude/platform_macros.GNU
      'dds4ccm_opendds=1' >> $(ACE_ROOT)/include/makeinclude/platform_macros.GNU
      "$(platform_file)" >> $(ACE_ROOT)/include/makeinclude/platform_macros.GNU
    displayName: Create platform_macros file
  - powershell: perl $(ACE_ROOT)/bin/mwc.pl -type gnuace CIAO_TAO_DAnCE_OpenDDS.mwc -workers 4
    displayName: Run mwc.pl on CIAO_TAO_DAnCE_OpenDDS.mwc
  - bash: make -j 6
    displayName: Build project

- job: MacOSX
  pool:
    vmImage: macOS-10.14
  steps:
  - powershell: git clone --depth 1 git://github.com/DOCGroup/ACE_TAO.git $(DOC_ROOT)
    displayName: git clone ACE_TAO
  - powershell: git clone --depth 1 git://github.com/DOCGroup/MPC.git $(MPC_ROOT)
    displayName: git clone MPC
  - powershell: git clone --depth 1 git://github.com/DOCGroup/DAnCE.git $(DAnCE_ROOT)
    displayName: git clone DAnCE
  - powershell: |
      '#include "ace/config-macosx.h"' > $(ACE_ROOT)/ace/config.h
    displayName: Create config.h file
  - powershell: |
      'include $(ACE_ROOT)/include/makeinclude/platform_macosx.GNU' > $(ACE_ROOT)/include/makeinclude/platform_macros.GNU;
    displayName: Create platform_macros file
  - powershell: perl $(ACE_ROOT)/bin/mwc.pl -type gnuace CIAO_TAO_DAnCE.mwc -workers 4
    displayName: Run mwc.pl on CIAO_TAO_DAnCE.mwc
  - bash: make -j 6
    displayName: Build project
